//Github: https://github.com/Anthaguz/Estructura-de-Datos-Grupo-7

package GUI;

import com.estructuras.Documento;
import com.estructuras.Pila;
import com.googolplex.Googolplex;
import java.awt.Desktop;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.nio.file.Files;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.table.DefaultTableModel;

public class VentanaPrincipal extends javax.swing.JFrame {
    
    /**
     * Creates new form Interfaz
     */
    private String currentDir = System.getProperty("user.dir");
    private String DOCS_PATH = currentDir + "\\src\\main\\java\\docs";
    private String sortMode = "LIOT";//"Last in on top". Tambien puede ser MSOT "Most searched on top".
                                     //Tambien puede ser "FIOT" First in on top para el orden original.
    private static long ultimoClick=0;
    private final int timeoutParaDoubleClick=500;
    
    public void llenarTabla(){
        DefaultTableModel modelo = (DefaultTableModel) tablaDocumentos.getModel();
        List<String[]> documentosString = Googolplex.programa.popularTabla();
        modelo.setRowCount(0);
        int index=documentosString.size()-1;
        switch (sortMode){
            case "LIOT":
                while (index>=0){
                    modelo.addRow(documentosString.get(index));
                    index--;
                }
                break;
            case "MSOT":
                List<String[]> documentosPorBusquedas=Googolplex.programa.getDocumentosMasBuscados().imprimirPila();
                for(String[] row:documentosPorBusquedas){
                    modelo.addRow(row);
                }
                break;
            case "FIOT":
                for (String[] row:documentosString){
                    modelo.addRow(row);
                }
                break;
        }
    }
    public VentanaPrincipal() {
        initComponents();
        llenarTabla();
        txtboxSearch.getDocument().addDocumentListener(new DocumentListener(){
            @Override
            public void insertUpdate(DocumentEvent e) {
                buscar();
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                buscar();
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
                buscar();
            }
            
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jToolBar1 = new javax.swing.JToolBar();
        filler6 = new javax.swing.Box.Filler(new java.awt.Dimension(3, 0), new java.awt.Dimension(3, 0), new java.awt.Dimension(3, 32767));
        filler7 = new javax.swing.Box.Filler(new java.awt.Dimension(3, 0), new java.awt.Dimension(3, 0), new java.awt.Dimension(3, 32767));
        filler12 = new javax.swing.Box.Filler(new java.awt.Dimension(20, 0), new java.awt.Dimension(20, 0), new java.awt.Dimension(20, 32767));
        filler11 = new javax.swing.Box.Filler(new java.awt.Dimension(20, 0), new java.awt.Dimension(20, 0), new java.awt.Dimension(20, 32767));
        filler8 = new javax.swing.Box.Filler(new java.awt.Dimension(3, 0), new java.awt.Dimension(3, 0), new java.awt.Dimension(3, 32767));
        filler10 = new javax.swing.Box.Filler(new java.awt.Dimension(3, 0), new java.awt.Dimension(3, 0), new java.awt.Dimension(3, 32767));
        btnDocumentoExistente = new javax.swing.JButton();
        filler2 = new javax.swing.Box.Filler(new java.awt.Dimension(3, 0), new java.awt.Dimension(3, 0), new java.awt.Dimension(3, 32767));
        btnDocumentoNuevo = new javax.swing.JButton();
        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(3, 0), new java.awt.Dimension(3, 0), new java.awt.Dimension(3, 32767));
        btnActualizar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaDocumentos = new javax.swing.JTable();
        cbbxModoDeOrden = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        btnAbrirArchivo = new javax.swing.JButton();
        txtboxSearch = new javax.swing.JTextField();
        btnSearch = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Googolplex");
        setLocation(new java.awt.Point(400, 200));

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));

        jToolBar1.setBackground(java.awt.SystemColor.activeCaption);
        jToolBar1.setFloatable(false);
        jToolBar1.setRollover(true);
        jToolBar1.add(filler6);
        jToolBar1.add(filler7);
        jToolBar1.add(filler12);
        jToolBar1.add(filler11);
        jToolBar1.add(filler8);
        jToolBar1.add(filler10);

        btnDocumentoExistente.setBackground(new java.awt.Color(20, 128, 216));
        btnDocumentoExistente.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btnDocumentoExistente.setText("  Importar Documento  ");
        btnDocumentoExistente.setActionCommand("Importar Documento");
        btnDocumentoExistente.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnDocumentoExistente.setMaximumSize(new java.awt.Dimension(133, 25));
        btnDocumentoExistente.setMinimumSize(new java.awt.Dimension(133, 25));
        btnDocumentoExistente.setPreferredSize(new java.awt.Dimension(133, 25));
        btnDocumentoExistente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDocumentoExistenteActionPerformed(evt);
            }
        });
        jToolBar1.add(btnDocumentoExistente);
        jToolBar1.add(filler2);

        btnDocumentoNuevo.setBackground(new java.awt.Color(20, 128, 216));
        btnDocumentoNuevo.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btnDocumentoNuevo.setText("  Crear documento  ");
        btnDocumentoNuevo.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnDocumentoNuevo.setMaximumSize(new java.awt.Dimension(133, 25));
        btnDocumentoNuevo.setMinimumSize(new java.awt.Dimension(133, 25));
        btnDocumentoNuevo.setPreferredSize(new java.awt.Dimension(133, 25));
        btnDocumentoNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDocumentoNuevoActionPerformed(evt);
            }
        });
        jToolBar1.add(btnDocumentoNuevo);
        jToolBar1.add(filler1);

        btnActualizar.setBackground(new java.awt.Color(20, 128, 216));
        btnActualizar.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btnActualizar.setText("  Actualizar tabla  ");
        btnActualizar.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnActualizar.setFocusable(false);
        btnActualizar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnActualizar.setMaximumSize(new java.awt.Dimension(133, 25));
        btnActualizar.setMinimumSize(new java.awt.Dimension(133, 25));
        btnActualizar.setPreferredSize(new java.awt.Dimension(133, 25));
        btnActualizar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarActionPerformed(evt);
            }
        });
        jToolBar1.add(btnActualizar);

        tablaDocumentos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Numero de documento", "Nombre", "Fecha de adicion"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablaDocumentos.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jScrollPane1.setViewportView(tablaDocumentos);

        cbbxModoDeOrden.setBackground(java.awt.SystemColor.activeCaption);
        cbbxModoDeOrden.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Mas recientes", "Mas buscados", "Orden de ingreso" }));
        cbbxModoDeOrden.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbbxModoDeOrdenActionPerformed(evt);
            }
        });

        jLabel1.setText("Orden de archivos:");

        btnAbrirArchivo.setBackground(java.awt.SystemColor.activeCaption);
        btnAbrirArchivo.setText("  Abrir Archivo  ");
        btnAbrirArchivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAbrirArchivoActionPerformed(evt);
            }
        });

        txtboxSearch.setToolTipText("Presione buscar para actualizar la busqueda");

        btnSearch.setBackground(java.awt.SystemColor.activeCaption);
        btnSearch.setText("Buscar");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(53, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 649, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(btnSearch, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnAbrirArchivo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(cbbxModoDeOrden, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(txtboxSearch))))
                .addGap(50, 50, 50))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbbxModoDeOrden, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(btnAbrirArchivo))
                .addGap(16, 16, 16)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtboxSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSearch))
                .addGap(26, 26, 26)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(38, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnDocumentoNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDocumentoNuevoActionPerformed
        
        CrearArchivo createDOC = new CrearArchivo();
        createDOC.setVisible(true);
        llenarTabla();
    }//GEN-LAST:event_btnDocumentoNuevoActionPerformed

    private void btnDocumentoExistenteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDocumentoExistenteActionPerformed
        // TODO add your handling code here:
        File archivo=Googolplex.programa.leerArchivoExistente();
        File destino = new File(Googolplex.programa.getPathRelativoDelPrograma()+Googolplex.programa.getPathRelativoDeLosDocumentos()+archivo.getName());
        try {
            Files.copy(archivo.toPath(), destino.toPath());
            Googolplex.programa.documentoExistente(archivo.getName());
        } catch (IOException e) {
            JOptionPane.showMessageDialog(null, "Error: El documento ya existe.", "Error", JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
        }  
        llenarTabla();
    }//GEN-LAST:event_btnDocumentoExistenteActionPerformed

    private void btnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarActionPerformed
        llenarTabla();
        txtboxSearch.setText("");
    }//GEN-LAST:event_btnActualizarActionPerformed

    private void cbbxModoDeOrdenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbbxModoDeOrdenActionPerformed
        // TODO add your handling code here:
        int index=cbbxModoDeOrden.getSelectedIndex();
        switch (index){
            case 0:
                sortMode="LIOT";
                llenarTabla();
                txtboxSearch.setText("");
                break;
            case 1:
                sortMode="MSOT";
                llenarTabla();
                txtboxSearch.setText("");
                break;
            case 2:
                sortMode="FIOT";
                llenarTabla();
                txtboxSearch.setText("");
                break;
        }
    }//GEN-LAST:event_cbbxModoDeOrdenActionPerformed

    private void btnAbrirArchivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAbrirArchivoActionPerformed
        int lineaSeleccionada = tablaDocumentos.getSelectedRow();
        int numeroDeDocumento = -1;
        if (lineaSeleccionada != -1) {
            Object contenidoDeLinea = tablaDocumentos.getModel().getValueAt(lineaSeleccionada, 0);
            numeroDeDocumento = Integer.parseInt(contenidoDeLinea.toString());
        }
        if (numeroDeDocumento == -1) {
            JOptionPane.showMessageDialog(null, "Error: El documento no se encontro.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        Documento paraAbrir = Googolplex.programa.getDocumentosRegistrados().encontrarPorNumeroDeDocumento(numeroDeDocumento);
        Googolplex.programa.getDocumentosRegistrados().incrementarNumeroDeBusquedas(paraAbrir.getNumeroDeDocumento());
        //Googolplex.programa.getDocumentosMasBuscados().incrementarNumeroDeBusquedas(paraAbrir.getNumeroDeDocumento());
        Googolplex.programa.getDocumentosMasBuscados().ordenarPilaMayorAMenor(Googolplex.programa.getDocumentosMasBuscados());
        Googolplex.programa.editarLineaDeDocumentoEditado(paraAbrir);
        File archivo = new File(Googolplex.programa.getPathRelativoDelPrograma() + Googolplex.programa.getPathRelativoDeLosDocumentos() + paraAbrir.getNombre());
        try {
            Desktop.getDesktop().open(archivo);
        } catch (IOException f) {
            f.printStackTrace();
        }
        llenarTabla();
    }//GEN-LAST:event_btnAbrirArchivoActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
//        DefaultTableModel modelo = (DefaultTableModel) tablaDocumentos.getModel();
//        Pila resultadoDeBusqueda=Googolplex.programa.getDocumentosMasBuscados().encontrarTodoDocumentoQueCalce(txtboxSearch.getText());
//        modelo.setRowCount(0);
//        List<String[]> documentosPorBusquedas = resultadoDeBusqueda.imprimirPila();
//        for (String[] row : documentosPorBusquedas) {
//            modelo.addRow(row);
//        }
    }//GEN-LAST:event_btnSearchActionPerformed

    private void buscar(){
        String search=txtboxSearch.getText();
        System.out.println("++"+search+"++");
        DefaultTableModel modelo = (DefaultTableModel) tablaDocumentos.getModel();
        Pila resultadoDeBusqueda=Googolplex.programa.getDocumentosMasBuscados().encontrarTodoDocumentoQueCalce(search);
        modelo.setRowCount(0);
        List<String[]> documentosPorBusquedas = resultadoDeBusqueda.imprimirPila();
        for (String[] row : documentosPorBusquedas) {
            modelo.addRow(row);
        }
//        search=null;
//        System.gc();
    }
    
    /**
     * @param args the command line arguments
     */
    public void interfazG() {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try
        {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels())
            {
                if ("Nimbus".equals(info.getName()))
                {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex)
        {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex)
        {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex)
        {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex)
        {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VentanaPrincipal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAbrirArchivo;
    private javax.swing.JButton btnActualizar;
    private javax.swing.JButton btnDocumentoExistente;
    private javax.swing.JButton btnDocumentoNuevo;
    private javax.swing.JButton btnSearch;
    private javax.swing.JComboBox<String> cbbxModoDeOrden;
    private javax.swing.Box.Filler filler1;
    private javax.swing.Box.Filler filler10;
    private javax.swing.Box.Filler filler11;
    private javax.swing.Box.Filler filler12;
    private javax.swing.Box.Filler filler2;
    private javax.swing.Box.Filler filler6;
    private javax.swing.Box.Filler filler7;
    private javax.swing.Box.Filler filler8;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JTable tablaDocumentos;
    private javax.swing.JTextField txtboxSearch;
    // End of variables declaration//GEN-END:variables
}